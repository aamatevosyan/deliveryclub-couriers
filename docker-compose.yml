version: '3'
services:
  app:
    build:
      context: ./docker/app/17.0
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: newapple4g/dcc
    ports:
      - '${APP_PORT:-80}:80'
      - '${ENCORE_PORT:-8080}:8080'
    environment:
      WWWUSER: '${WWWUSER}'
      CHOKIDAR_USEPOLLING: 'true'
      NODE_ENV: 'development'
    volumes:
      - '.:/var/www/html'
    networks:
      - dcc
    depends_on:
      - pgsql
      - redis
    container_name: 'dcc_app'
    hostname: '${HOSTNAME:-dcc}'
  pgsql:
    image: 'postgres:latest'
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'dcc_pgsql:/var/lib/postgresql/data'
      - ./docker/pgsql/entrypoint.d:/docker-entrypoint-initdb.d
    networks:
      - dcc
    healthcheck:
      test:
        [
            'CMD',
            'pg_isready',
            '-q',
            '-d',
            '${DB_DATABASE}',
            '-U',
            '${DB_USERNAME}',
        ]
    container_name: 'dcc_pgsql'
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'dcc_redis:/data'
    networks:
      - dcc
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      retries: 3
      timeout: 5s
    container_name: 'dcc_redis'
networks:
  dcc:
    driver: bridge
volumes:
  dcc_pgsql:
    driver: local
  dcc_redis:
    driver: local
